% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_data.R
\name{tidy_data}
\alias{tidy_data}
\alias{tidy_data.default}
\alias{tidy_data.labs}
\alias{tidy_data.locations}
\alias{tidy_data.meds_cont}
\alias{tidy_data.meds_sched}
\alias{tidy_data.services}
\alias{tidy_data.vent_times}
\title{Tidy data}
\usage{
tidy_data(x, ...)

\method{tidy_data}{default}(x, ...)

\method{tidy_data}{labs}(x, censor = TRUE, ...)

\method{tidy_data}{locations}(x, ...)

\method{tidy_data}{meds_cont}(x, ref, sched, ...)

\method{tidy_data}{meds_sched}(x, ref, ...)

\method{tidy_data}{services}(x, ...)

\method{tidy_data}{vent_times}(x, dc, ...)
}
\arguments{
\item{x}{A data frame with an edw class type}

\item{...}{additional arguments passed on to individual methods}

\item{censor}{A logical, if TRUE will add a column indicating the data was
censored (default)}

\item{ref}{A data frame with three columns: name, type, and group. See
details below.}

\item{sched}{A data frame with intermittent medications}

\item{dc}{A data frame with discharge date/times}
}
\description{
\code{tidy_data} transforms raw EDW data into a tidy format

For locations, this function accounts for incorrect departure
  time from raw EDW data by calculating the departure time using the arrival
  time of the next unit (unless it was the patient's last unit during the
  hospitalization in which case the recorded departure time is used). It also
  combines multiple rows of data when the patient did not actually leave that
  unit.

For services, this function accounts for incorrect end times
  from raw EDW data by calculating the end time using the start time of the
  next service (unless  it was the patient's last service during the
  hospitalization). It also  combines multiple rows of data when the patient
  did not actually leave  that service.
}
\details{
This is an S3 generic function for tidying EDW data read in using
\code{\link{read_data}}. The function invokes the appropriate method based on
the type of data being transformed (i.e., lab results, medication data,
etc.).

The data frame passed to \code{ref} should contain three character columns:
name, type, and group. The name column should contain either generic
medication names or medication classes. The type column should specify
whether the value in name is a "class" or "med". The group column should
specify whether the medication is a continous ("cont") or scheduled ("sched")
medication.
}
\examples{
# tidy lab data; non-numeric results will be converted to NA
suppressWarnings(print(head(
  tidy_data(labs)
)))

# tidy labs without marking censored data (will be converted to NA's)
suppressWarnings(print(head(
  tidy_data(labs, censor = FALSE)
)))

# make a reference data frame for tidying meds
ref <- tibble::tibble(
  name = c("heparin", "warfarin", "antiplatelet agents"),
  type = c("med", "med", "class"),
  group = c("cont", "sched", "sched")
)

# tidy continuous medications; will keep only heparin drips
print(head(
  tidy_data(meds_cont, ref, meds_sched)
))

# tidy intermittent medications; will keep warfarin and antiplatelet agents
print(head(
  tidy_data(meds_sched, ref)
))

# tidy home medications
print(head(
  tidy_data(meds_home, ref)
))

# return all patients, even if they do not have any of the desired home meds
pts <- dplyr::distinct(labs, pie.id)
print(head(
  tidy_data(meds_home, ref, pts = pts)
))

# return discharge prescriptions instead of home meds
print(head(
  tidy_data(meds_home, ref, pts = pts, home = FALSE)
))

}

